### Teilaufgabe 2: Ist ein periodisches Aufwecken der Aufgabe T2 über einen Alarm notwendig?  
    Wir geben die Daten mittels T9 sofort aus sollte im trigger_mode ein triggerereignis erkannt werden.
    Dazu muss T2 aufgeweckt werden, damit dieses erkannt werden kann. Dies kann zB mit einen arlam geschehen.

### Teilaufgabe 3: Aus den neuen Kommandos ergeben sich zusätzliche Betriebsmodi – welche?
    StateTriggerOn      
    StateTLevelRise     

### Teilaufgabe 4: Welche Vor- beziehungsweise Nachteile sehen Sie bei den zur Verfügung stehenden Mechanismen zur Bereitstellung von Ereignissen unter eCos?

    MAILBOX(mb):
        _PRO_
        - Producer muss nicht blockieren bis ein Consumer bereit ist das event zu empfangen (falls mb nicht voll)
        _CON_
        - groesse der mb nicht einstellbar (default: 10 slots)
        - mb voll -> Producer wird blockiert bis wieder Platz ist
    EVENT-FLAGS:
        _PRO_
        - 2^32 -1 Signalkombinationenn mgl.
        - warten auf mehrere ereignisse, oder eines von einer menge, oder eine Kombination von ereignissen einfach mgl.
        _CON_
        - zaehlen keine ereignisse -> je nach implementierung koennten Dinge verloren gehen
        - warten von threads auf bestimmte flags is blockierend *cyg_thread_wait()*
    - Beide:
        Unterstuetzen Produzent Konsumer Muster

### Teilaufgabe 5:
    Aufgabensystem umsetzen in dem die Threads nicht von Alarmen aufgeweckt werden, sondern sich selbst geeignet aufwecken.
    mindestens 1 Alarm noetig -> T1
